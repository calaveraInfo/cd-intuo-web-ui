/*
 * File: app/controller/LoginController.js
 *
 * This file was generated by Sencha Architect version 3.0.1.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.3.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.3.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('CestaDomu.controller.LoginController', {
    extend: 'Ext.app.Controller',
    alias: 'controller.loginController',

    requires: [
        'Ext.app.Route',
        'Ext.MessageBox',
        'CestaDomu.controller.Login',
        'CestaDomu.controller.Intuo'
    ],

    config: {
        routes: {
            'public/login': 'main'
        },

        refs: {
            mainContainer: 'mainContainer',
            loginForm: 'loginView formpanel',
            loginView: {
                autoCreate: true,
                selector: 'loginView',
                xtype: 'loginView'
            }
        },

        control: {
            "#loginButton": {
                tap: 'onButtonTap'
            }
        }
    },

    onButtonTap: function(button, e, eOpts) {
        var messageBox = Ext.Msg.show({
            title: "Probíhá ověřování...",
            buttons: []
        });

        CestaDomu.controller.Login.login(
            this.getLoginForm().getValues(),
            this,
            function(response){
                messageBox.hide();
                if (this.loginAction) {
                    var loginAction = this.loginAction;
                    this.loginAction = null;
                    Ext.callback(loginAction.loginSuccess, loginAction.loginCallbackScope);
                } else {
                    this.getApplication().fireEvent("loggedIn");
                }
            },function(response) {
                Ext.Msg.alert("Přihlášení se nezdařilo");
            });


    },

    main: function() {
        this.getMainContainer().setActiveItem(this.getLoginView());
    },

    onHome: function() {
        this.getApplication().redirectTo("public/login");
    },

    onLoginRequested: function(scope, success) {
        if (CestaDomu.controller.Login.isLoginActive()) {
            Ext.callback(success, scope);
        } else if (CestaDomu.controller.Login.isLoggedIn()) {
            CestaDomu.controller.Login.refreshLogin(scope, success);
        } else {
            this.loginAction = {
                loginCallbackScope: scope,
                loginSuccess: success
            };
            this.getMainContainer().setActiveItem(this.getLoginView());
        }
    },

    init: function(application) {

        application.on([
        { event: 'home', fn: this.onHome, scope: this },
        { event: 'loginRequested', fn: this.onLoginRequested, scope: this }
        ]);
    }

});