/*
 * File: app/controller/ClientDetailController.js
 *
 * This file was generated by Sencha Architect version 3.0.1.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.3.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.3.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('CestaDomu.controller.ClientDetailController', {
    extend: 'Ext.app.Controller',

    requires: [
        'Ext.app.Route'
    ],

    config: {
        routes: {
            'private/clients/:clientId': 'main'
        },

        refs: {
            clientDetailView: {
                autoCreate: true,
                selector: 'clientDetailView',
                xtype: 'clientDetailView'
            },
            loadingView: {
                autoCreate: true,
                selector: 'loadingView',
                xtype: 'loadingView'
            },
            mainContainer: 'mainContainer',
            clientNewMenu: {
                autoCreate: true,
                selector: 'clientNewMenu',
                xtype: 'clientNewMenu'
            },
            clientDetailTitle: 'clientDetailView toolbar',
            clientInfoContainer: 'clientDetailView #clientInfoContainer'
        },

        control: {
            "clientDetailView carousel": {
                activeitemchange: 'onCarouselActiveItemChange'
            },
            "clientDetailView button": {
                tap: 'onShowNewItemMenu'
            },
            "clientNewMenu image": {
                tap: 'onImageTap'
            }
        }
    },

    onCarouselActiveItemChange: function(container, value, oldValue, eOpts) {
        if (this.getClientInfoContainer().getRecord()) {
            this.getClientDetailTitle().setTitle({title: this.getClientInfoContainer().getRecord().get('Name') + ': ' + value.title, 'text-align': 'left'});
        }
    },

    onShowNewItemMenu: function(button, e, eOpts) {
        this.getClientNewMenu().showBy(button);
    },

    onImageTap: function(image, e, eOpts) {
        alert('ahoj');
    },

    main: function(clientId) {
        CestaDomu.controller.Login.doLogged(this, function () {
            var messageBox = Ext.Msg.show({
                title: "Načítám data...",
                buttons: []
            });

            var Contact = Ext.ModelManager.getModel('CestaDomu.model.Contact');

            Contact.load(clientId, {
                scope: this,
                success: function(client) {
                    this.getMainContainer().setActiveItem(this.getClientDetailView());
                    this.getClientInfoContainer().setRecordRecursive(client);
                    // ruční volání handleru události změny v caruselu pro nastavení nadpisu obrazovky
                    // jsou uvedeny pouze parametry, které se ve funkci používají, přestože signatura je rozsáhlejší
                    this.onCarouselActiveItemChange(null, this.getClientInfoContainer());
                    messageBox.hide();
                },
                failure: function () {
                    Ext.Msg.alert('Chyba', 'Nepodařilo se načíst data klienta.');
                }
            });
        });
    },

    onClientSelected: function(clientId) {
        this.getApplication().redirectTo("private/clients/"+clientId);
    },

    init: function(application) {

        application.on([
        { event: 'clientSelected', fn: this.onClientSelected, scope: this }
        ]);
    }

});