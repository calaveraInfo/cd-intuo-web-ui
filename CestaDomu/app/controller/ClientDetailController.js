/*
 * File: app/controller/ClientDetailController.js
 *
 * This file was generated by Sencha Architect version 3.0.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.3.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.3.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('CestaDomu.controller.ClientDetailController', {
    extend: 'Ext.app.Controller',

    requires: [
        'Ext.app.Route'
    ],

    config: {
        routes: {
            'private/pacients/:pacientId': 'main'
        },

        refs: {
            clientDetailView: {
                autoCreate: true,
                selector: 'clientDetailView',
                xtype: 'clientDetailView'
            },
            mainContainer: 'mainContainer',
            clientDetailTitle: 'clientDetailView toolbar',
            quickInfo: 'clientDetailView #quickInfo',
            nurseCareInfo: 'clientDetailView #clientInfoContainer #nurseCareInfo',
            menu: 'clientDetailView #menu',
            drugList: 'clientDetailView #drugContainer list',
            nurseCareList: 'clientDetailView #clientInfoContainer list'
        },

        control: {
            "clientDetailView #clientInfoContainer list": {
                itemtap: 'onCareListItemTap'
            },
            "clientDetailView #menu button": {
                tap: 'onMenuButton'
            },
            "clientDetailView #newRecord": {
                tap: 'onNewRecord'
            },
            "clientDetailView #back": {
                tap: 'onBack'
            }
        }
    },

    onCareListItemTap: function(dataview, index, target, record, e, eOpts) {
        this.getNurseCareInfo().setHtml(this.nurseCareTemplate.apply(record.getData()));
    },

    onMenuButton: function(button, e, eOpts) {
        //Ext.Msg.alert('test');
        switch (button.getItemId()) {
            case 'nurse':
                this.getClientDetailView().setActiveItem(0);
                break;
            case 'drug':
                this.getClientDetailView().setActiveItem(1);
                break;
            case 'doctor':
                this.getClientDetailView().setActiveItem(2);
                break;
        }
    },

    onNewRecord: function(button, e, eOpts) {
        this.getApplication().fireEvent("newNurseCareRequested", this.pacient.get('ID'));
    },

    onBack: function(button, e, eOpts) {
        this.getApplication().fireEvent("clientsView");
    },

    main: function(pacientId) {
        this.getApplication().fireEvent("loginRequested", this, function () {
            var messageBox = Ext.Msg.show({
                title: "Načítám data...",
                buttons: []
            });

            this.getMainContainer().setActiveItem(this.getClientDetailView());
            this.getMenu().setPressedButtons([0]);

            var Pacient = Ext.ModelManager.getModel('CestaDomu.model.Pacient');

            Pacient.load(pacientId, {
                scope: this,
                success: function(pacient) {
                    this.pacient = pacient;
                    var nurseCareStore = this.getNurseCareList().getStore();
                    nurseCareStore.filter('id', pacient.get('ID'));
                    nurseCareStore.load(function(records, operation, success) {
                        if (success && records[0]) {
                            this.onCareListItemTap(null, null, null, records[0]);
                        }
                    }, this);

                    var drugStore = this.getDrugList().getStore();
                    drugStore.filter('id', pacient.get('ID'));
                    drugStore.load();

                    this.getQuickInfo().setHtml(this.quickInfoTemplate.apply(pacient.getData()));
                    messageBox.hide();
                },
                failure: function () {
                    Ext.Msg.alert('Chyba', 'Nepodařilo se načíst data klienta.');
                }
            });
        });
    },

    onPacientSelected: function(pacientId) {
        this.getApplication().redirectTo("private/pacients/"+pacientId);
    },

    constructor: function() {
        this.callParent(arguments);
        this.quickInfoTemplate = new Ext.XTemplate(
            '{Name}, <a href="http://mapy.cz/?q={street}, {city}" style="color: #99CCFF; text-decoration: none;" target="_blank">{street}, {city}</a><br/>',
            'Pečující: {contactPerson}<tpl if="mobileNumber">, {mobilePrefix} {mobileNumber}</tpl><tpl if="phoneNumber">, {phonePrefix} {phoneNumber}</tpl>'
        );

        this.nurseCareTemplate = new Ext.XTemplate(
            'Délka: {durationtime} min.<br/>',
            'Popis: {Description}'
        );
    },

    init: function(application) {

        application.on([
        { event: 'pacientSelected', fn: this.onPacientSelected, scope: this }
        ]);
    }

});