/*
 * File: app/controller/RoleSelectController.js
 *
 * This file was generated by Sencha Architect version 3.0.1.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.3.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.3.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('CestaDomu.controller.RoleSelectController', {
    extend: 'Ext.app.Controller',

    requires: [
        'Ext.app.Route'
    ],

    config: {
        routes: {
            'private/roleSelect': 'main'
        },

        refs: {
            mainContainer: 'mainContainer',
            roleSelectView: {
                autoCreate: true,
                selector: 'roleSelectView',
                xtype: 'roleSelectView'
            }
        },

        control: {
            "roleSelectView #careRole": {
                tap: 'onCareButtonTap'
            },
            "roleSelectView #officeRole": {
                tap: 'onOfficeButtonTap'
            }
        }
    },

    onCareButtonTap: function(button, e, eOpts) {
        this.getApplication().fireEvent("careRoleSelected");
    },

    onOfficeButtonTap: function(button, e, eOpts) {
        this.getApplication().fireEvent("officeRoleSelected");
    },

    main: function() {
        this.getMainContainer().setActiveItem(this.getRoleSelectView());
    },

    onLoggedIn: function() {
        this.getApplication().redirectTo("private/roleSelect");
    },

    init: function(application) {

        application.on([
        { event: 'loggedIn', fn: this.onLoggedIn, scope: this }
        ]);
    }

});